{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchHooks.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,oCACA,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,OASd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,uBCPnBG,EAAO,uCAAI,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEkCC,UAAWH,GAF7C,+DAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAICA,EAAKC,OAJN,uBAIbC,EAJa,EAIbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAcbM,GAda,4CAAJ,sDCCPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OACI,yBAAKc,UAAU,4DACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoBtC,OAbAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAEGqB,EDhBmBK,CAAa1B,GAA/Ba,EAF6B,EAElCN,KAAYa,EAFsB,EAEtBA,QAIf,OACI,oCACA,wBAAIJ,UAAU,qCAAqChB,GAEjDoB,GAAW,uBAAGJ,UAAU,qCAAb,WAEb,yBAAKA,UAAU,YAGHH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAiB,IAAKjB,EAAIC,IACLD,UEnBfkB,EAAe,WAAO,IAAD,EAEK1C,mBAAS,CAAC,aAFf,mBAEvB2C,EAFuB,KAEZ5C,EAFY,KAK9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACA2B,IAAK3B,EACLA,SAAUA,U,MCflC8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.76f283c5.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( {setCategories} ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value )\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length>2){\n            setCategories( cats => [inputValue,...cats] );\n            setInputValue('');  \n        }\n\n        \n    }\n\n    return (\n        <>\n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n        </>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired    \n}\n\n"," \nexport const getGifs =  async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=uOIPAvKWFsYYNOZxSnQf7SMlLPUDuNwm`\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    \n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url \n        }\n    })\n\n    return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ({title,url}) => {\n    //console.log(id,title,,url);\n    return (\n        <div className=\"card animate__animated animate__fadeIn animate__delay-2s\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchHooks'\nimport { GifGridItem } from './GifGridItem';\n//import { getGifs } from '../helpers/getGifs';\n\nexport const GifGrid = ({ category }) => {\n\nconst {data:images,loading} = useFetchGifs(category);\n\n\n\n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n        { loading && <p className=\"animate__animated animate__flashs\">loading</p> }\n\n        <div className=\"cardgrid\">\n\n                {\n                    images.map( img => (\n                        <GifGridItem \n                        key={img.id}\n                        {...img}\n                        />\n                    ))\n                }\n\n        </div>\n        </>\n    )\n}\n","import {useState,useEffect} from 'react'\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n\n        getGifs(category)\n            .then(imgs => {\n\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n\n            })\n    }, [category])\n\n    return state;\n\n}","import React,{useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories,setCategories] = useState(['onepunch']);\n\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr></hr>\n\n            <ol>\n                {\n                    categories.map( category => \n                        <GifGrid\n                        key={category}\n                        category={category} \n                        />\n                    )\n                } \n            </ol>\n        </>\n    )\n\n} ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from \"./GifExpertApp\";\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}